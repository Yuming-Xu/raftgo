// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service_raft.proto

package raft

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MessageSendType int32

const (
	MessageSendType_MsgApp       MessageSendType = 0
	MessageSendType_MsgVote      MessageSendType = 1
	MessageSendType_MsgHeartBeat MessageSendType = 2
)

var MessageSendType_name = map[int32]string{
	0: "MsgApp",
	1: "MsgVote",
	2: "MsgHeartBeat",
}

var MessageSendType_value = map[string]int32{
	"MsgApp":       0,
	"MsgVote":      1,
	"MsgHeartBeat": 2,
}

func (x MessageSendType) String() string {
	return proto.EnumName(MessageSendType_name, int32(x))
}

func (MessageSendType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c4102fce8fd90dfe, []int{0}
}

type MessageReturnType int32

const (
	MessageReturnType_MsgAppRet       MessageReturnType = 0
	MessageReturnType_MsgVoteRet      MessageReturnType = 1
	MessageReturnType_MsgHeartBeatRet MessageReturnType = 2
)

var MessageReturnType_name = map[int32]string{
	0: "MsgAppRet",
	1: "MsgVoteRet",
	2: "MsgHeartBeatRet",
}

var MessageReturnType_value = map[string]int32{
	"MsgAppRet":       0,
	"MsgVoteRet":      1,
	"MsgHeartBeatRet": 2,
}

func (x MessageReturnType) String() string {
	return proto.EnumName(MessageReturnType_name, int32(x))
}

func (MessageReturnType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c4102fce8fd90dfe, []int{1}
}

type EntryType int32

const (
	EntryType_EntryNormal EntryType = 0
	//---2.15---
	//just set, I haven't know how to deal with it
	EntryType_EntryConfChange EntryType = 1
)

var EntryType_name = map[int32]string{
	0: "EntryNormal",
	1: "EntryConfChange",
}

var EntryType_value = map[string]int32{
	"EntryNormal":     0,
	"EntryConfChange": 1,
}

func (x EntryType) String() string {
	return proto.EnumName(EntryType_name, int32(x))
}

func (EntryType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_c4102fce8fd90dfe, []int{2}
}

type Request struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4102fce8fd90dfe, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Request) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type SuccessMsg struct {
	Success              bool     `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SuccessMsg) Reset()         { *m = SuccessMsg{} }
func (m *SuccessMsg) String() string { return proto.CompactTextString(m) }
func (*SuccessMsg) ProtoMessage()    {}
func (*SuccessMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4102fce8fd90dfe, []int{1}
}

func (m *SuccessMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SuccessMsg.Unmarshal(m, b)
}
func (m *SuccessMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SuccessMsg.Marshal(b, m, deterministic)
}
func (m *SuccessMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SuccessMsg.Merge(m, src)
}
func (m *SuccessMsg) XXX_Size() int {
	return xxx_messageInfo_SuccessMsg.Size(m)
}
func (m *SuccessMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_SuccessMsg.DiscardUnknown(m)
}

var xxx_messageInfo_SuccessMsg proto.InternalMessageInfo

func (m *SuccessMsg) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

type Entry struct {
	Type                 EntryType `protobuf:"varint,1,opt,name=type,proto3,enum=raft.EntryType" json:"type,omitempty"`
	Term                 uint64    `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Index                uint64    `protobuf:"varint,3,opt,name=index,proto3" json:"index,omitempty"`
	Key                  string    `protobuf:"bytes,4,opt,name=key,proto3" json:"key,omitempty"`
	Value                string    `protobuf:"bytes,5,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Entry) Reset()         { *m = Entry{} }
func (m *Entry) String() string { return proto.CompactTextString(m) }
func (*Entry) ProtoMessage()    {}
func (*Entry) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4102fce8fd90dfe, []int{2}
}

func (m *Entry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Entry.Unmarshal(m, b)
}
func (m *Entry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Entry.Marshal(b, m, deterministic)
}
func (m *Entry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Entry.Merge(m, src)
}
func (m *Entry) XXX_Size() int {
	return xxx_messageInfo_Entry.Size(m)
}
func (m *Entry) XXX_DiscardUnknown() {
	xxx_messageInfo_Entry.DiscardUnknown(m)
}

var xxx_messageInfo_Entry proto.InternalMessageInfo

func (m *Entry) GetType() EntryType {
	if m != nil {
		return m.Type
	}
	return EntryType_EntryNormal
}

func (m *Entry) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *Entry) GetIndex() uint64 {
	if m != nil {
		return m.Index
	}
	return 0
}

func (m *Entry) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Entry) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type MessageSend struct {
	Type                 MessageSendType `protobuf:"varint,1,opt,name=type,proto3,enum=raft.MessageSendType" json:"type,omitempty"`
	Term                 uint64          `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	LogIndex             uint64          `protobuf:"varint,3,opt,name=logIndex,proto3" json:"logIndex,omitempty"`
	LogTerm              uint64          `protobuf:"varint,4,opt,name=logTerm,proto3" json:"logTerm,omitempty"`
	CommitIndex          uint64          `protobuf:"varint,5,opt,name=commitIndex,proto3" json:"commitIndex,omitempty"`
	NodeID               uint64          `protobuf:"varint,6,opt,name=nodeID,proto3" json:"nodeID,omitempty"`
	Entry                *Entry          `protobuf:"bytes,7,opt,name=entry,proto3" json:"entry,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MessageSend) Reset()         { *m = MessageSend{} }
func (m *MessageSend) String() string { return proto.CompactTextString(m) }
func (*MessageSend) ProtoMessage()    {}
func (*MessageSend) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4102fce8fd90dfe, []int{3}
}

func (m *MessageSend) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageSend.Unmarshal(m, b)
}
func (m *MessageSend) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageSend.Marshal(b, m, deterministic)
}
func (m *MessageSend) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageSend.Merge(m, src)
}
func (m *MessageSend) XXX_Size() int {
	return xxx_messageInfo_MessageSend.Size(m)
}
func (m *MessageSend) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageSend.DiscardUnknown(m)
}

var xxx_messageInfo_MessageSend proto.InternalMessageInfo

func (m *MessageSend) GetType() MessageSendType {
	if m != nil {
		return m.Type
	}
	return MessageSendType_MsgApp
}

func (m *MessageSend) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *MessageSend) GetLogIndex() uint64 {
	if m != nil {
		return m.LogIndex
	}
	return 0
}

func (m *MessageSend) GetLogTerm() uint64 {
	if m != nil {
		return m.LogTerm
	}
	return 0
}

func (m *MessageSend) GetCommitIndex() uint64 {
	if m != nil {
		return m.CommitIndex
	}
	return 0
}

func (m *MessageSend) GetNodeID() uint64 {
	if m != nil {
		return m.NodeID
	}
	return 0
}

func (m *MessageSend) GetEntry() *Entry {
	if m != nil {
		return m.Entry
	}
	return nil
}

type MessageRet struct {
	Type                 MessageReturnType `protobuf:"varint,1,opt,name=type,proto3,enum=raft.MessageReturnType" json:"type,omitempty"`
	Term                 uint64            `protobuf:"varint,2,opt,name=term,proto3" json:"term,omitempty"`
	Success              uint64            `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *MessageRet) Reset()         { *m = MessageRet{} }
func (m *MessageRet) String() string { return proto.CompactTextString(m) }
func (*MessageRet) ProtoMessage()    {}
func (*MessageRet) Descriptor() ([]byte, []int) {
	return fileDescriptor_c4102fce8fd90dfe, []int{4}
}

func (m *MessageRet) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageRet.Unmarshal(m, b)
}
func (m *MessageRet) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageRet.Marshal(b, m, deterministic)
}
func (m *MessageRet) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageRet.Merge(m, src)
}
func (m *MessageRet) XXX_Size() int {
	return xxx_messageInfo_MessageRet.Size(m)
}
func (m *MessageRet) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageRet.DiscardUnknown(m)
}

var xxx_messageInfo_MessageRet proto.InternalMessageInfo

func (m *MessageRet) GetType() MessageReturnType {
	if m != nil {
		return m.Type
	}
	return MessageReturnType_MsgAppRet
}

func (m *MessageRet) GetTerm() uint64 {
	if m != nil {
		return m.Term
	}
	return 0
}

func (m *MessageRet) GetSuccess() uint64 {
	if m != nil {
		return m.Success
	}
	return 0
}

func init() {
	proto.RegisterEnum("raft.MessageSendType", MessageSendType_name, MessageSendType_value)
	proto.RegisterEnum("raft.MessageReturnType", MessageReturnType_name, MessageReturnType_value)
	proto.RegisterEnum("raft.EntryType", EntryType_name, EntryType_value)
	proto.RegisterType((*Request)(nil), "raft.Request")
	proto.RegisterType((*SuccessMsg)(nil), "raft.SuccessMsg")
	proto.RegisterType((*Entry)(nil), "raft.Entry")
	proto.RegisterType((*MessageSend)(nil), "raft.MessageSend")
	proto.RegisterType((*MessageRet)(nil), "raft.MessageRet")
}

func init() { proto.RegisterFile("service_raft.proto", fileDescriptor_c4102fce8fd90dfe) }

var fileDescriptor_c4102fce8fd90dfe = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x6c, 0x92, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0x93, 0x2e, 0x69, 0xda, 0x97, 0xb5, 0xf1, 0x3c, 0x21, 0xa2, 0x49, 0x93, 0xa6, 0x20,
	0xd0, 0x54, 0xa1, 0x49, 0x2b, 0x57, 0x2e, 0x50, 0x10, 0xec, 0x10, 0x0e, 0x59, 0xc5, 0x75, 0x32,
	0xe9, 0x9b, 0xa9, 0x68, 0xec, 0x60, 0x3b, 0x15, 0xf9, 0x7f, 0xf8, 0x43, 0x91, 0x9d, 0xa2, 0x25,
	0xdb, 0x6e, 0xf9, 0x5e, 0x9e, 0xdf, 0xef, 0x7b, 0xf6, 0x07, 0x54, 0xa3, 0xda, 0x6f, 0x4b, 0xbc,
	0x53, 0xec, 0xde, 0x5c, 0xd5, 0x4a, 0x1a, 0x49, 0x03, 0xfb, 0x9d, 0xbd, 0x81, 0xa8, 0xc0, 0xdf,
	0x0d, 0x6a, 0x43, 0x8f, 0x21, 0x10, 0xac, 0xc2, 0xd4, 0xbf, 0xf0, 0x2f, 0xa7, 0x74, 0x06, 0xe1,
	0x9e, 0xed, 0x1a, 0x4c, 0x47, 0x56, 0x66, 0xe7, 0x00, 0xb7, 0x4d, 0x59, 0xa2, 0xd6, 0xb9, 0xe6,
	0x34, 0x81, 0x48, 0x77, 0xca, 0x75, 0x4f, 0xb2, 0x3b, 0x08, 0x3f, 0x0b, 0xa3, 0x5a, 0x7a, 0x0e,
	0x81, 0x69, 0xeb, 0x6e, 0xc8, 0x7c, 0x99, 0x5c, 0x39, 0xa0, 0xfb, 0xb5, 0x6e, 0x6b, 0xb4, 0x0c,
	0x83, 0xaa, 0x72, 0x43, 0x03, 0xcb, 0xd8, 0x8a, 0x0d, 0xfe, 0x49, 0x8f, 0x9c, 0x8c, 0xe1, 0xe8,
	0x17, 0xb6, 0x69, 0x30, 0xe4, 0x87, 0x8e, 0xff, 0xd7, 0x87, 0x38, 0x47, 0xad, 0x19, 0xc7, 0x5b,
	0x14, 0x1b, 0xfa, 0x6a, 0xc0, 0x79, 0xd1, 0x71, 0x7a, 0x0d, 0xcf, 0xd0, 0x08, 0x4c, 0x76, 0x92,
	0xdf, 0xf4, 0x80, 0x09, 0x44, 0x3b, 0xc9, 0xd7, 0xb6, 0x25, 0x70, 0x85, 0x53, 0x88, 0x4b, 0x59,
	0x55, 0x5b, 0xd3, 0x75, 0x85, 0xae, 0x38, 0x87, 0xb1, 0x90, 0x1b, 0xbc, 0xf9, 0x94, 0x8e, 0x9d,
	0x3e, 0x83, 0x10, 0xed, 0x42, 0x69, 0x74, 0xe1, 0x5f, 0xc6, 0xcb, 0xb8, 0xb7, 0x63, 0x56, 0x00,
	0x1c, 0x4c, 0x14, 0x68, 0xe8, 0xeb, 0x81, 0xc9, 0x97, 0x03, 0x93, 0x05, 0x9a, 0x46, 0x89, 0x67,
	0x6c, 0xf6, 0xee, 0xd6, 0xb9, 0x5c, 0xbc, 0x87, 0xe4, 0xf1, 0x62, 0x00, 0xe3, 0x5c, 0xf3, 0x0f,
	0x75, 0x4d, 0x3c, 0x1a, 0x43, 0x94, 0x6b, 0xfe, 0x5d, 0x1a, 0x24, 0x3e, 0x25, 0x70, 0x9c, 0x6b,
	0xfe, 0x15, 0x99, 0x32, 0x1f, 0x91, 0x19, 0x32, 0x5a, 0x7c, 0x81, 0x93, 0xa7, 0xc4, 0x19, 0x4c,
	0xbb, 0xf3, 0x05, 0x1a, 0xe2, 0xd1, 0x39, 0xc0, 0x61, 0x84, 0xd5, 0x3e, 0x3d, 0x85, 0xa4, 0x3f,
	0xc5, 0x16, 0x47, 0x8b, 0x6b, 0x98, 0x3e, 0xbc, 0x63, 0x02, 0xb1, 0x13, 0xdf, 0xa4, 0xaa, 0xd8,
	0x8e, 0x78, 0xf6, 0x88, 0x2b, 0xac, 0xa4, 0xb8, 0x5f, 0xfd, 0x64, 0x82, 0x23, 0xf1, 0x97, 0x5b,
	0x67, 0xb3, 0xa8, 0x4b, 0x7a, 0x0d, 0x93, 0xb5, 0x62, 0xc2, 0x85, 0xe7, 0xe4, 0xc9, 0x63, 0x9d,
	0x91, 0xc7, 0x57, 0x93, 0x79, 0xf4, 0xad, 0x4d, 0x66, 0xb9, 0x5f, 0x55, 0x1b, 0x3a, 0xeb, 0x7e,
	0x1f, 0x82, 0xfa, 0xbf, 0xfb, 0x21, 0x8f, 0x99, 0xf7, 0x63, 0xec, 0x42, 0xfd, 0xee, 0x5f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0x53, 0x3d, 0x04, 0x28, 0xea, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MsgRpcClient is the client API for MsgRpc service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MsgRpcClient interface {
	TransMsg(ctx context.Context, in *MessageSend, opts ...grpc.CallOption) (*MessageRet, error)
	RecvCmd(ctx context.Context, in *Request, opts ...grpc.CallOption) (*SuccessMsg, error)
}

type msgRpcClient struct {
	cc grpc.ClientConnInterface
}

func NewMsgRpcClient(cc grpc.ClientConnInterface) MsgRpcClient {
	return &msgRpcClient{cc}
}

func (c *msgRpcClient) TransMsg(ctx context.Context, in *MessageSend, opts ...grpc.CallOption) (*MessageRet, error) {
	out := new(MessageRet)
	err := c.cc.Invoke(ctx, "/raft.MsgRpc/TransMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *msgRpcClient) RecvCmd(ctx context.Context, in *Request, opts ...grpc.CallOption) (*SuccessMsg, error) {
	out := new(SuccessMsg)
	err := c.cc.Invoke(ctx, "/raft.MsgRpc/RecvCmd", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MsgRpcServer is the server API for MsgRpc service.
type MsgRpcServer interface {
	TransMsg(context.Context, *MessageSend) (*MessageRet, error)
	RecvCmd(context.Context, *Request) (*SuccessMsg, error)
}

// UnimplementedMsgRpcServer can be embedded to have forward compatible implementations.
type UnimplementedMsgRpcServer struct {
}

func (*UnimplementedMsgRpcServer) TransMsg(ctx context.Context, req *MessageSend) (*MessageRet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransMsg not implemented")
}
func (*UnimplementedMsgRpcServer) RecvCmd(ctx context.Context, req *Request) (*SuccessMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RecvCmd not implemented")
}

func RegisterMsgRpcServer(s *grpc.Server, srv MsgRpcServer) {
	s.RegisterService(&_MsgRpc_serviceDesc, srv)
}

func _MsgRpc_TransMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(MessageSend)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgRpcServer).TransMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.MsgRpc/TransMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgRpcServer).TransMsg(ctx, req.(*MessageSend))
	}
	return interceptor(ctx, in, info, handler)
}

func _MsgRpc_RecvCmd_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MsgRpcServer).RecvCmd(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/raft.MsgRpc/RecvCmd",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MsgRpcServer).RecvCmd(ctx, req.(*Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _MsgRpc_serviceDesc = grpc.ServiceDesc{
	ServiceName: "raft.MsgRpc",
	HandlerType: (*MsgRpcServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TransMsg",
			Handler:    _MsgRpc_TransMsg_Handler,
		},
		{
			MethodName: "RecvCmd",
			Handler:    _MsgRpc_RecvCmd_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service_raft.proto",
}
