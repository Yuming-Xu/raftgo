syntax = "proto3";

package raft;

service MsgRpc {
	rpc TransMsg(MessageSend) returns (MessageRet) {}

	rpc RecvCmd(Request) returns (SuccessMsg) {}
}


enum MessageSendType {
	MsgApp             = 0;//AppendEntries RPC
	MsgVote            = 1;//RequestVote RPC
	MsgHeartBeat	   = 2;//heartbeat,actually just like AppendEntries RPC
}

enum MessageReturnType {
	MsgAppRet          = 0;//the same
	MsgVoteRet         = 1;//the same
	MsgHeartBeatRet	   = 2;//the same
}

enum EntryType {
	EntryNormal       = 0;
	//---2.15---
	//just set, I haven't know how to deal with it
	EntryConfChange   = 1;
}

message Request{
	string name
	string value
}

message SuccessMsg{
	bool success
}

message Entry {
	EntryType  	type 	= 1;
	uint64 		term 	= 2;//log entry term
	uint64	  	index   = 3;//log entry index
	string	  	key	= 4;//stored data
	string		value	= 5;
}

message MessageSend{
	MessageSendType 		type 		 = 1;//0 stands for AppendEntries RPC,1 stands for RequestVote RPC
	uint64					term 		 = 2;//leader's or candidate's term
	uint64					logIndex 	 = 3;//app: prelogindex, vote: lastlogindex
	uint64					logTerm		 = 4;//the same
	uint64  				commitIndex  = 5;//commit index
	uint64					nodeID		 = 6;//leaderID or candidateID
	Entry 					entry 	 	 = 7;//entries[],only set one
}

message MessageRet{
	MessageReturnType 	type 		 = 1;
	uint64 				term 		 = 2;
	uint64 				success 	 = 3;//app:success, vote:voteGranted
}